{"version":3,"sources":["components/Lyrics.jsx","components/FavoritesList.jsx","components/Home.jsx","components/LogAndSign.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","buttonStyle","background","border","borderRadius","boxShadow","color","height","padding","inputStyle","width","marginBottom","margin","formStyle","display","justifyContent","flexDirection","position","paper","marginTop","spacing","alignItems","icosContainer","Lyrics","props","classes","useState","song","songTitle","setSongTitle","artist","setArtist","lyrics","setLyrics","useEffect","isSearchEnabled","length","className","TextField","label","variant","onChange","e","target","value","required","Button","onClick","onSearchClicked","disabled","targets","element","newValue","oldValue","console","log","options","stepSize","range","customButtons","up","style","down","backgroundColor","WebkitBoxSizing","WebkitBorderRadius","buttonsMargin","fontSize","onAddToFavoritesClicked","id","FavoritesList","favoritesList","user","favorites","List","map","item","index","ListItem","button","onFavoriteClicked","onItemClicked","ListItemText","primary","ListItemSecondaryAction","IconButton","onDeleteFavorite","edge","aria-label","Home","selectedTab","setSelectedTab","songToDisplay","setSongToDisplay","setUser","status","setStatusBase","openSnackBar","setOpenSnackBar","fetchLyrics","lyricsDetails","axios","get","params","then","res","Object","keys","data","catch","error","AppBar","Tabs","event","selectionFollowsFocus","Tab","Snackbar","open","autoHideDuration","onClose","Alert","newSong","favoriteSong","newFavorites","find","push","updatdUser","username","password","_id","post","splice","LogAndSign","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","loginUsername","setLoginUsername","loginPassword","setLoginPassword","setData","isLoggedIn","setLoggedIn","InputProps","startAdornment","InputAdornment","AccountCircle","type","LockRounded","method","withCredentials","url","App","bg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ae680c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FontSizeChanger from 'react-font-size-changer';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    buttonStyle: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n    inputStyle: {\r\n        width: '80%',\r\n        marginBottom: '10px',\r\n        margin: '25px'\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        width: '80%',\r\n        marginBottom: '10px',\r\n        position: 'relative'\r\n\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    icosContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    }\r\n\r\n}));\r\n\r\nexport default function Lyrics(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [songTitle, setSongTitle] = useState(props.song.songTitle || '');\r\n    const [artist, setArtist] = useState(props.song.artist || '');\r\n    const [lyrics, setLyrics] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLyrics(props.lyrics);\r\n    }, [props.lyrics]);\r\n\r\n    const onChangeSongTitle = (e) => {\r\n        setSongTitle(e.target.value);\r\n\r\n    }\r\n\r\n    const onChangeArtist = (e) => {\r\n        setArtist(e.target.value);\r\n    }\r\n\r\n    const onAddToFavoritesClicked = () => {\r\n        props.onAddToFavoritesClicked();\r\n    }\r\n\r\n    const onSearchClicked = (e) => {\r\n        props.onSearchClicked(songTitle, artist);\r\n    }\r\n\r\n    const isSearchEnabled = songTitle.length > 0 && artist.length > 0;\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <div className={classes.formStyle}>\r\n                <div className={classes.inputStyle}>\r\n                    <TextField\r\n                        label=\"Song\"\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onChange={onChangeSongTitle}\r\n                        required\r\n                        value={songTitle}\r\n\r\n                    />\r\n                </div>\r\n                <div className={classes.inputStyle}>\r\n                    <TextField\r\n                        label=\"Artist\"\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onChange={onChangeArtist}\r\n                        required\r\n                        value={artist}\r\n                    />\r\n                </div>\r\n                <div className={classes.inputStyle}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => onSearchClicked()}\r\n                        disabled={!isSearchEnabled}\r\n                        className={classes.buttonStyle}\r\n                    >Search</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.icosContainer} >\r\n                    {lyrics &&\r\n                        <FontSizeChanger \r\n                            targets={['#target .content']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                                console.log(element, newValue, oldValue);\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range: 3\r\n                            }}\r\n                            customButtons={{\r\n                                up: <span style={{ 'fontSize': '36px' }}>+</span>,\r\n                                down: <span style={{ 'fontSize': '20px' }}>-</span>,\r\n                                style: {\r\n                                    backgroundColor: 'red',\r\n                                    color: 'white',\r\n                                    WebkitBoxSizing: 'border-box',\r\n                                    WebkitBorderRadius: '5px',\r\n                                    width: '60px'\r\n                                },\r\n                                buttonsMargin: 10\r\n                            }}\r\n                        />\r\n                    }\r\n                    {lyrics &&\r\n                        <div className={classes.inputStyle}>\r\n                            <FavoriteIcon\r\n                            color=\"secondary\"\r\n                            fontSize=\"large\" \r\n                            onClick={() => onAddToFavoritesClicked()}>\r\n\r\n                            </FavoriteIcon>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div id=\"target\">\r\n                <p className=\"content\">{lyrics}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport default function FavoritesList(props) {\r\n\r\n    const favoritesList = props.user.favorites ||'';\r\n   \r\n    const onDeleteFavorite = (index)  => {\r\n        props.onDeleteFavorite(index);\r\n    }\r\n\r\n    const onItemClicked = (index) => {\r\n        props.onFavoriteClicked(index);\r\n    }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <List >\r\n                    {\r\n                        favoritesList && (\r\n                            favoritesList.map((item, index) => {\r\n                                return (\r\n                                    <ListItem key={index} button={true} onClick={()=>onItemClicked(index)}>\r\n                                        <ListItemText key={index}\r\n                                            primary={item.artist + '-' + item.songTitle}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton onClick={() => onDeleteFavorite(index)} edge=\"end\" aria-label=\"delete\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\r\nimport Lyrics from './Lyrics'\r\nimport FavoritesList from './FavoritesList'\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function Home(props) {\r\n\r\n    const [selectedTab, setSelectedTab] = useState(props.selectedTab ? props.selectedTab : 0);\r\n    const [songToDisplay, setSongToDisplay] = useState('');\r\n    const [lyrics, setLyrics] = useState(\"\");\r\n    const [user, setUser] = useState(props.user);\r\n    const [status, setStatusBase] = useState(null);\r\n    const [openSnackBar, setOpenSnackBar] = useState(false);\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    const onDeleteFavorite = (index) => {\r\n        let newFavorites = user.favorites;\r\n        newFavorites.splice(index, 1);\r\n        let updatdUser = {\r\n            username: user.username,\r\n            password: user.password,\r\n            favorites: newFavorites,\r\n            id: user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n        setUser(updatdUser);\r\n    }\r\n\r\n    const fetchLyrics = (lyricsDetails) => {\r\n        axios.get('/lyrics', {\r\n            params: lyricsDetails\r\n        })\r\n            .then(res => {\r\n                if (Object.keys(res.data).length === 0) {\r\n                    setLyrics(null);\r\n                    setStatusBase(\"Lyrics Not Found\");\r\n                    setOpenSnackBar(true);\r\n                } else {\r\n                    setLyrics(res.data);\r\n                }\r\n            }).catch(error => {\r\n                setStatusBase(error);\r\n                setOpenSnackBar(true);\r\n\r\n            });\r\n    }\r\n\r\n    const onFavoriteClicked = (index) => {\r\n        setSelectedTab(0);\r\n        const songToDisplay = props.user.favorites[index];\r\n        setSongToDisplay(songToDisplay);\r\n        fetchLyrics(songToDisplay);\r\n    }\r\n\r\n    const onSearchClicked = (songTitle, artist) => {\r\n        const songToDisplay = { songTitle: songTitle, artist: artist };\r\n        setSongToDisplay(songToDisplay);\r\n        fetchLyrics(songToDisplay);\r\n    }\r\n\r\n    const findSong = (favorites, newSong) => {\r\n        const found = favorites.find(element => element.songTitle === newSong.songTitle);\r\n        return found;\r\n    }\r\n\r\n    const onAddToFavoritesClicked = () => {\r\n        const favoriteSong = {\r\n            songTitle: songToDisplay.songTitle,\r\n            artist: songToDisplay.artist,\r\n        }\r\n        let newFavorites = props.user.favorites;\r\n        let foundSong = findSong(newFavorites, favoriteSong);\r\n        if (foundSong) {\r\n            setStatusBase(\"Song Already In Favorites\");\r\n            setOpenSnackBar(true);\r\n\r\n        }\r\n        else {\r\n            newFavorites.push(favoriteSong);\r\n            let updatdUser = {\r\n                username: props.user.username,\r\n                password: props.user.password,\r\n                favorites: newFavorites,\r\n                id: props.user._id\r\n            }\r\n            // add to favorites in db\r\n            axios.post('/update', updatdUser)\r\n                .then(res => {\r\n                    setStatusBase(\"Song Added To Favorites\");\r\n                    setOpenSnackBar(true);\r\n                }).catch(error => {\r\n                    setStatusBase(error);\r\n                    setOpenSnackBar(true);\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={selectedTab} onChange={handleChange} selectionFollowsFocus >\r\n                    <Tab label=\"Lyrics\" />\r\n                    <Tab label=\"Favorites\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <Snackbar open={openSnackBar} autoHideDuration={3000} onClose={() => setOpenSnackBar(false)}>\r\n                <Alert color=\"info\" variant=\"filled\">{status}</Alert>\r\n            </Snackbar>\r\n\r\n            {\r\n                selectedTab === 0 && <Lyrics lyrics={lyrics}\r\n                    user={props.user}\r\n                    song={songToDisplay}\r\n                    onAddToFavoritesClicked={onAddToFavoritesClicked}\r\n                    onSearchClicked={onSearchClicked}\r\n                />\r\n            }\r\n            {\r\n                selectedTab === 1 && <FavoritesList user={props.user}\r\n                    onFavoriteClicked={onFavoriteClicked}\r\n                    onDeleteFavorite={onDeleteFavorite}\r\n                />\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Home\";\r\nimport { TextField, Button, InputAdornment } from '@material-ui/core';\r\nimport { AccountCircle, LockRounded } from '@material-ui/icons';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nfunction LogAndSign() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [registerUsername, setRegisterUsername] = useState(\"\");\r\n    const [registerPassword, setRegisterPassword] = useState(\"\");\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [status, setStatusBase] = useState('');\r\n    const [openSnackBar, setOpenSnackBar] = useState(false);\r\n\r\n    const register = () => { //when it is called it sends the logic to backend\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                username: registerUsername,\r\n                password: registerPassword,\r\n            },\r\n            withCredentials: true,\r\n            url: \"/register\",\r\n        }).then((res) => {\r\n            if (res.data === 'User Already Exists') {\r\n                setStatusBase(res.data);\r\n                setOpenSnackBar(true);\r\n            }\r\n            else {\r\n                setData(res.data);\r\n                setStatusBase(\"Register Done\");\r\n                setOpenSnackBar(true);\r\n            }\r\n        }).catch((error) => {\r\n            setStatusBase(error);\r\n            setOpenSnackBar(true);\r\n        })\r\n    };\r\n\r\n    const login = () => {\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                username: loginUsername,\r\n                password: loginPassword,\r\n            },\r\n            withCredentials: true,\r\n            url: \"/login\",\r\n        })\r\n            .then((res) => {\r\n                setData(res.data);\r\n                if (res.data._id) {\r\n                    setLoggedIn(true);\r\n                    //no need to update status for alert because rendering Home page\r\n                }\r\n                else {\r\n                    setLoggedIn(false);\r\n                    setStatusBase(\"User Not Found\");\r\n                    setOpenSnackBar(true);\r\n                }\r\n            }).catch(error => {\r\n                setStatusBase(error)\r\n                setOpenSnackBar(true);\r\n            });\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return (\r\n            <div className=\"App\">\r\n                <Home user={data} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className={classes.paper}>\r\n                    <Snackbar open={openSnackBar} autoHideDuration={3000} onClose={() => setOpenSnackBar(false)}>\r\n                        <Alert color=\"info\" variant=\"filled\">{status}</Alert>\r\n                    </Snackbar>\r\n                    <div>\r\n                        <h1>Register</h1>\r\n                        <TextField\r\n                            label=\"Username\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => setRegisterUsername(e.target.value)}\r\n                            required\r\n                            InputProps={{ startAdornment: <InputAdornment position=\"start\"><AccountCircle /></InputAdornment> }}\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => setRegisterPassword(e.target.value)}\r\n                            required\r\n                            InputProps={{ startAdornment: <InputAdornment position=\"start\"><LockRounded /></InputAdornment> }}\r\n\r\n                        />\r\n                        <div>\r\n                            <Button onClick={register} variant=\"contained\" color=\"primary\" >Register</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h1>Login</h1>\r\n\r\n                        <TextField\r\n                            label=\"Username\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => setLoginUsername(e.target.value)}\r\n                            required\r\n                            InputProps={{ startAdornment: <InputAdornment position=\"start\"><AccountCircle /></InputAdornment> }}\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => setLoginPassword(e.target.value)}\r\n                            required\r\n                            InputProps={{ startAdornment: <InputAdornment position=\"start\"><LockRounded /></InputAdornment> }}\r\n\r\n                        />\r\n                        <div>\r\n                            <Button onClick={login} variant=\"contained\" color=\"primary\" >Login</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogAndSign\r\n","import LogAndSign from './components/LogAndSign';\r\nimport ParticlesBg from 'particles-bg'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <LogAndSign />\r\n      <ParticlesBg type=\"circle\" bg={true}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}