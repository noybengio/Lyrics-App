{"ast":null,"code":"const checkOptions = options => {\n  let {\n    apiKey,\n    title,\n    artist\n  } = options;\n\n  switch ('undefined') {\n    case typeof apiKey:\n      throw '\"apiKey\" property is missing from options';\n\n    case typeof title:\n      throw '\"title\" property is missing from options';\n\n    case typeof artist:\n      throw '\"artist\" property is missing from options';\n\n    default:\n      break;\n  }\n};\n\nconst getTitle = (title, artist) => {\n  return `${title} ${artist}`.toLowerCase().replace(/ *\\([^)]*\\) */g, '').replace(/ *\\[[^\\]]*]/, '').replace(/feat.|ft./g, '').replace(/\\s+/g, ' ').trim();\n};\n\nmodule.exports = {\n  checkOptions,\n  getTitle\n};","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/node_modules/genius-lyrics-api/lib/utils/index.js"],"names":["checkOptions","options","apiKey","title","artist","getTitle","toLowerCase","replace","trim","module","exports"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,OAAD,IAAa;AACjC,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA4BH,OAAhC;;AACA,UAAQ,WAAR;AACC,SAAK,OAAOC,MAAZ;AACC,YAAM,2CAAN;;AACD,SAAK,OAAOC,KAAZ;AACC,YAAM,0CAAN;;AACD,SAAK,OAAOC,MAAZ;AACC,YAAM,2CAAN;;AACD;AACC;AARF;AAUA,CAZD;;AAcA,MAAMC,QAAQ,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAQ,GAAED,KAAM,IAAGC,MAAO,EAAnB,CACLE,WADK,GAELC,OAFK,CAEG,gBAFH,EAEqB,EAFrB,EAGLA,OAHK,CAGG,aAHH,EAGkB,EAHlB,EAILA,OAJK,CAIG,YAJH,EAIiB,EAJjB,EAKLA,OALK,CAKG,MALH,EAKW,GALX,EAMLC,IANK,EAAP;AAOA,CARD;;AAUAC,MAAM,CAACC,OAAP,GAAiB;AAAEV,EAAAA,YAAF;AAAgBK,EAAAA;AAAhB,CAAjB","sourcesContent":["const checkOptions = (options) => {\r\n\tlet { apiKey, title, artist } = options;\r\n\tswitch ('undefined') {\r\n\t\tcase typeof apiKey:\r\n\t\t\tthrow '\"apiKey\" property is missing from options';\r\n\t\tcase typeof title:\r\n\t\t\tthrow '\"title\" property is missing from options';\r\n\t\tcase typeof artist:\r\n\t\t\tthrow '\"artist\" property is missing from options';\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst getTitle = (title, artist) => {\r\n\treturn `${title} ${artist}`\r\n\t\t.toLowerCase()\r\n\t\t.replace(/ *\\([^)]*\\) */g, '')\r\n\t\t.replace(/ *\\[[^\\]]*]/, '')\r\n\t\t.replace(/feat.|ft./g, '')\r\n\t\t.replace(/\\s+/g, ' ')\r\n\t\t.trim();\r\n};\r\n\r\nmodule.exports = { checkOptions, getTitle };\r\n"]},"metadata":{},"sourceType":"script"}