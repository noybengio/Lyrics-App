{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D5\\u05D9 \\u05D1\\u05E0\\u05D2'\\u05D5\\\\Documents\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA \\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\coognitive\\\\coognitive-lyrics-app\\\\src\\\\FavoritesList.js\";\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport axios from 'axios';\nimport { getLyrics, getSong } from 'genius-lyrics-api';\nexport class FavoritesList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"in FavoritesList props.user: \", props.user);\n    this.state = {\n      favoritesList: this.props.user.favorites\n    };\n  }\n\n  onDeleteFavorite(index) {\n    console.log(\"onDeleteFavorite this.props.user.favorites: \", this.state.favoritesList);\n    var newFavorites = this.state.favoritesList;\n    newFavorites.splice(index, 1);\n    console.log(\"Lyrics newFavorites arr \", newFavorites);\n    var updatdUser = {\n      username: this.props.user.username,\n      password: this.props.user.password,\n      favorites: newFavorites,\n      id: this.props.user._id\n    }; //add to favorites in db\n\n    axios.post('http://localhost:4000/update', updatdUser).then(res => {\n      console.log(\"lyrics update req: \", res.data);\n    });\n    this.setState({\n      favoritesList: newFavorites\n    });\n  }\n\n  onItemClicked(index) {\n    console.log(\"song: \", this.state.favoritesList[index]);\n    const song = this.state.favoritesList[index];\n    const options = {\n      apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\n      title: song.songTitle,\n      artist: song.artist,\n      optimizeQuery: true\n    };\n    console.log(\"options: \\n\", options);\n    getLyrics(options).then(lyrics => {\n      console.log(\"lyrics: \", lyrics); //this.setState({ lyrics: lyrics })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.props.user.favorites && this.props.user.favorites.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => this.onItemClicked(index),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.artist + '-' + item.songTitle\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => this.onDeleteFavorite(index),\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default FavoritesList;","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/src/FavoritesList.js"],"names":["React","Component","List","IconButton","ListItemText","ListItemSecondaryAction","DeleteIcon","ListItem","axios","getLyrics","getSong","FavoritesList","constructor","props","console","log","user","state","favoritesList","favorites","onDeleteFavorite","index","newFavorites","splice","updatdUser","username","password","id","_id","post","then","res","data","setState","onItemClicked","song","options","apiKey","title","songTitle","artist","optimizeQuery","lyrics","render","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AAEA,OAAO,MAAMC,aAAN,SAA4BV,SAA5B,CAAsC;AACzCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,KAAK,CAACG,IAAnD;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWG,IAAX,CAAgBG;AADtB,KAAb;AAGH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4D,KAAKE,KAAL,CAAWC,aAAvE;AACA,QAAII,YAAY,GAAG,KAAKL,KAAL,CAAWC,aAA9B;AACAI,IAAAA,YAAY,CAACC,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCO,YAAxC;AAEA,QAAIE,UAAU,GAAG;AACbC,MAAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWG,IAAX,CAAgBS,QADb;AAEbC,MAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWG,IAAX,CAAgBU,QAFb;AAGbP,MAAAA,SAAS,EAAEG,YAHE;AAIbK,MAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWG,IAAX,CAAgBY;AAJP,KAAjB,CAPoB,CAcpB;;AACApB,IAAAA,KAAK,CAACqB,IAAN,CAAW,8BAAX,EAA2CL,UAA3C,EACKM,IADL,CACUC,GAAG,IAAI;AACTjB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCgB,GAAG,CAACC,IAAvC;AACH,KAHL;AAKA,SAAKC,QAAL,CAAc;AAAEf,MAAAA,aAAa,EAAEI;AAAjB,KAAd;AACH;;AAEDY,EAAAA,aAAa,CAACb,KAAD,EAAQ;AACjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAKE,KAAL,CAAWC,aAAX,CAAyBG,KAAzB,CAArB;AACA,UAAMc,IAAI,GAAG,KAAKlB,KAAL,CAAWC,aAAX,CAAyBG,KAAzB,CAAb;AACA,UAAMe,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,kEADI;AAEZC,MAAAA,KAAK,EAAEH,IAAI,CAACI,SAFA;AAGZC,MAAAA,MAAM,EAAEL,IAAI,CAACK,MAHD;AAIZC,MAAAA,aAAa,EAAE;AAJH,KAAhB;AAOA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BqB,OAA3B;AAEA3B,IAAAA,SAAS,CAAC2B,OAAD,CAAT,CAAmBN,IAAnB,CAAyBY,MAAD,IAAY;AAChC5B,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB2B,MAAxB,EADgC,CAEhC;AACH,KAHD;AAKH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AAAA,kBAES,KAAK9B,KAAL,CAAWG,IAAX,CAAgBG,SAAjB,IACI,KAAKN,KAAL,CAAWG,IAAX,CAAgBG,SAAhB,CAA0ByB,GAA1B,CAA8B,CAACC,IAAD,EAAOxB,KAAP,KAAiB;AAC3C,8BACI,QAAC,QAAD;AAAsB,YAAA,MAAM,EAAE,IAA9B;AAAoC,YAAA,OAAO,EAAE,MAAI,KAAKa,aAAL,CAAmBb,KAAnB,CAAjD;AAAA,oCACI,QAAC,YAAD;AACI,cAAA,OAAO,EAAEwB,IAAI,CAACL,MAAL,GAAc,GAAd,GAAoBK,IAAI,CAACN;AADtC,eAAmBlB,KAAnB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,uBAAD;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAE,MAAM,KAAKD,gBAAL,CAAsBC,KAAtB,CAA3B;AAAyD,gBAAA,IAAI,EAAC,KAA9D;AAAoE,8BAAW,QAA/E;AAAA,uCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,kBADJ;AAYH,SAbD;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AA9EwC;AAiF7C,eAAeV,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport axios from 'axios';\r\nimport { getLyrics, getSong } from 'genius-lyrics-api';\r\n\r\nexport class FavoritesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"in FavoritesList props.user: \", props.user);\r\n        this.state = {\r\n            favoritesList: this.props.user.favorites\r\n        }\r\n    }\r\n\r\n    onDeleteFavorite(index) {\r\n        console.log(\"onDeleteFavorite this.props.user.favorites: \", this.state.favoritesList);\r\n        var newFavorites = this.state.favoritesList;\r\n        newFavorites.splice(index, 1);\r\n\r\n        console.log(\"Lyrics newFavorites arr \", newFavorites);\r\n\r\n        var updatdUser = {\r\n            username: this.props.user.username,\r\n            password: this.props.user.password,\r\n            favorites: newFavorites,\r\n            id: this.props.user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('http://localhost:4000/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n\r\n        this.setState({ favoritesList: newFavorites });\r\n    }\r\n\r\n    onItemClicked(index) {\r\n        console.log(\"song: \",this.state.favoritesList[index]);\r\n        const song = this.state.favoritesList[index];\r\n        const options = {\r\n            apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\r\n            title: song.songTitle,\r\n            artist: song.artist,\r\n            optimizeQuery: true\r\n        };\r\n\r\n        console.log(\"options: \\n\", options);\r\n\r\n        getLyrics(options).then((lyrics) => {\r\n            console.log(\"lyrics: \", lyrics);\r\n            //this.setState({ lyrics: lyrics })\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List >\r\n                    {\r\n                        (this.props.user.favorites) && (\r\n                            this.props.user.favorites.map((item, index) => {\r\n                                return (\r\n                                    <ListItem key={index} button={true} onClick={()=>this.onItemClicked(index)}>\r\n                                        <ListItemText key={index}\r\n                                            primary={item.artist + '-' + item.songTitle}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton onClick={() => this.onDeleteFavorite(index)} edge=\"end\" aria-label=\"delete\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FavoritesList\r\n"]},"metadata":{},"sourceType":"module"}