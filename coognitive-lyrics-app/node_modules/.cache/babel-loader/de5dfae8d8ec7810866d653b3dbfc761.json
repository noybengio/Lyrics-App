{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D5\\u05D9 \\u05D1\\u05E0\\u05D2'\\u05D5\\\\Documents\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA \\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\coognitive\\\\coognitive-lyrics-app\\\\src\\\\Home.js\";\nimport React, { Component, useState } from 'react';\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport Lyrics from './Lyrics';\nimport FavoritesList from './FavoritesList';\nimport axios from 'axios';\nimport { getLyrics, getSong } from 'genius-lyrics-api';\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"home props.user: \", props.user);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSearchClicked = this.onSearchClicked.bind(this);\n    this.state = {\n      selectedTab: props.selectedTab ? props.selectedTab : 0,\n      lyrics: ''\n    };\n  }\n\n  onSearchClicked(songTitle, artist) {\n    const options = {\n      apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\n      title: songTitle,\n      artist: artist,\n      optimizeQuery: true\n    };\n    console.log(\"options: \\n\", options);\n    getLyrics(options).then(lyrics => {\n      console.log(\"lyrics: \", lyrics);\n      this.setState({\n        lyrics: lyrics\n      });\n    }); // console.log(\"home lyrics: \",this.props.lyrics);\n    // return (\n    //     <Lyrics lyrics={this.state.lyrics}/>\n    // )\n  }\n\n  onAddToFavoritesClicked(songTitle, artist) {\n    console.log(\"in home onAddToFavoritesClicked \");\n    const favoriteSong = {\n      songTitle: songTitle,\n      artist: artist\n    };\n    console.log(\"this.props.user.favorites: \", this.props.user.favorites);\n    var newFavorites = this.props.user.favorites;\n    newFavorites.push(favoriteSong);\n    console.log(\"Lyrics newFavorites arr \", newFavorites);\n    var updatdUser = {\n      username: this.props.user.username,\n      password: this.props.user.password,\n      favorites: newFavorites,\n      id: this.props.user._id\n    }; //add to favorites in db\n\n    axios.post('http://localhost:4000/update', updatdUser).then(res => {\n      console.log(\"lyrics update req: \", res.data);\n    });\n  }\n\n  handleChange(event, newValue) {\n    this.setState({\n      selectedTab: newValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: this.state.selectedTab,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Lyrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), this.state.selectedTab === 0 && /*#__PURE__*/_jsxDEV(Lyrics, {\n        user: this.props.user,\n        onAddToFavoritesClicked: this.onAddToFavoritesClicked,\n        onSearchClicked: this.onSearchClicked,\n        lyrics: this.state.lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 51\n      }, this), this.state.selectedTab === 1 && /*#__PURE__*/_jsxDEV(FavoritesList, {\n        user: this.props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default Home;","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/src/Home.js"],"names":["React","Component","useState","Tabs","Tab","AppBar","Lyrics","FavoritesList","axios","getLyrics","getSong","Home","constructor","props","console","log","user","handleChange","bind","onSearchClicked","state","selectedTab","lyrics","songTitle","artist","options","apiKey","title","optimizeQuery","then","setState","onAddToFavoritesClicked","favoriteSong","favorites","newFavorites","push","updatdUser","username","password","id","_id","post","res","data","event","newValue","render"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\r\nimport Lyrics from './Lyrics'\r\nimport FavoritesList from './FavoritesList'\r\nimport axios from 'axios';\r\nimport { getLyrics, getSong } from 'genius-lyrics-api';\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"home props.user: \", props.user);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSearchClicked = this.onSearchClicked.bind(this);\r\n\r\n        this.state = {\r\n            selectedTab: props.selectedTab ? props.selectedTab : 0,\r\n            lyrics:''\r\n        }\r\n    }\r\n\r\n    onSearchClicked(songTitle, artist) {\r\n        const options = {\r\n            apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\r\n            title: songTitle,\r\n            artist: artist,\r\n            optimizeQuery: true\r\n        };\r\n\r\n        console.log(\"options: \\n\", options);\r\n\r\n        getLyrics(options).then((lyrics) => {\r\n            console.log(\"lyrics: \", lyrics);\r\n            this.setState({ lyrics: lyrics })\r\n        });\r\n\r\n        // console.log(\"home lyrics: \",this.props.lyrics);\r\n        // return (\r\n        //     <Lyrics lyrics={this.state.lyrics}/>\r\n        // )\r\n\r\n    }\r\n\r\n    onAddToFavoritesClicked(songTitle, artist) {\r\n        console.log(\"in home onAddToFavoritesClicked \");\r\n\r\n        const favoriteSong = {\r\n            songTitle: songTitle,\r\n            artist: artist,\r\n        }\r\n        console.log(\"this.props.user.favorites: \", this.props.user.favorites);\r\n        var newFavorites = this.props.user.favorites;\r\n        newFavorites.push(favoriteSong);\r\n\r\n        console.log(\"Lyrics newFavorites arr \", newFavorites);\r\n\r\n        var updatdUser = {\r\n            username: this.props.user.username,\r\n            password: this.props.user.password,\r\n            favorites: newFavorites,\r\n            id: this.props.user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('http://localhost:4000/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        this.setState({ selectedTab: newValue })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.state.selectedTab} onChange={this.handleChange}>\r\n                        <Tab label=\"Lyrics\" />\r\n                        <Tab label=\"Favorites\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                { this.state.selectedTab === 0 && <Lyrics user={this.props.user}\r\n                    onAddToFavoritesClicked={this.onAddToFavoritesClicked}\r\n                    onSearchClicked={this.onSearchClicked}\r\n                    lyrics={this.state.lyrics}\r\n                    />}\r\n                { this.state.selectedTab === 1 && <FavoritesList user={this.props.user} />}\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}