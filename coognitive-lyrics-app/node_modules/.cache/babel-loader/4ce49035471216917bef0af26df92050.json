{"ast":null,"code":"const searchSong = require('./searchSong');\n\nconst extractLyrics = require('./utils/extractLyrics');\n\nconst {\n  checkOptions\n} = require('./utils');\n/**\n * @param {{apiKey: string, title: string, artist: string, optimizeQuery: boolean}} options\n */\n\n\nmodule.exports = async function (options) {\n  try {\n    checkOptions(options);\n    let results = await searchSong(options);\n    if (!results) return null;\n    let lyrics = await extractLyrics(results[0].url);\n    return {\n      id: results[0].id,\n      url: results[0].url,\n      lyrics,\n      albumArt: results[0].albumArt\n    };\n  } catch (e) {\n    throw e;\n  }\n};","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/node_modules/genius-lyrics-api/lib/getSong.js"],"names":["searchSong","require","extractLyrics","checkOptions","module","exports","options","results","lyrics","url","id","albumArt","e"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,uBAAD,CAA7B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAmBF,OAAO,CAAC,SAAD,CAAhC;AAEA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,gBAAgBC,OAAhB,EAAyB;AACzC,MAAI;AACHH,IAAAA,YAAY,CAACG,OAAD,CAAZ;AACA,QAAIC,OAAO,GAAG,MAAMP,UAAU,CAACM,OAAD,CAA9B;AACA,QAAI,CAACC,OAAL,EAAc,OAAO,IAAP;AACd,QAAIC,MAAM,GAAG,MAAMN,aAAa,CAACK,OAAO,CAAC,CAAD,CAAP,CAAWE,GAAZ,CAAhC;AACA,WAAO;AACNC,MAAAA,EAAE,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWG,EADT;AAEND,MAAAA,GAAG,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWE,GAFV;AAGND,MAAAA,MAHM;AAING,MAAAA,QAAQ,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWI;AAJf,KAAP;AAMA,GAXD,CAWE,OAAOC,CAAP,EAAU;AACX,UAAMA,CAAN;AACA;AACD,CAfD","sourcesContent":["const searchSong = require('./searchSong');\nconst extractLyrics = require('./utils/extractLyrics');\nconst { checkOptions } = require('./utils');\n\n/**\n * @param {{apiKey: string, title: string, artist: string, optimizeQuery: boolean}} options\n */\nmodule.exports = async function (options) {\n\ttry {\n\t\tcheckOptions(options);\n\t\tlet results = await searchSong(options);\n\t\tif (!results) return null;\n\t\tlet lyrics = await extractLyrics(results[0].url);\n\t\treturn {\n\t\t\tid: results[0].id,\n\t\t\turl: results[0].url,\n\t\t\tlyrics,\n\t\t\talbumArt: results[0].albumArt\n\t\t};\n\t} catch (e) {\n\t\tthrow e;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}