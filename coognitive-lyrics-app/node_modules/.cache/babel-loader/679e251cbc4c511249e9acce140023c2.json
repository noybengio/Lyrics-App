{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D5\\u05D9 \\u05D1\\u05E0\\u05D2'\\u05D5\\\\Documents\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA \\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\coognitive\\\\coognitive-lyrics-app\\\\src\\\\Lyrics.js\";\nimport { getLyrics, getSong } from 'genius-lyrics-api';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport React, { Component, useEffect } from 'react';\nimport StarIcon from '@material-ui/icons/Star';\nimport FontSizeChanger from 'react-font-size-changer';\nimport Dotdotdot from 'react-dotdotdot';\nimport axios from 'axios';\nexport default class Lyrics extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSongTitle = this.onChangeSongTitle.bind(this);\n    this.onChangeArtist = this.onChangeArtist.bind(this);\n    this.onAddToFavoritesClicked = this.onAddToFavoritesClicked.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      songTitle: this.props.song.songTitle,\n      artist: this.props.song.artist,\n      lyrics: props.lyrics\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.lyrics !== prevProps.lyrics) {\n      this.setState({\n        lyrics: this.props.lyrics\n      });\n    }\n  }\n\n  onChangeSongTitle(e) {\n    this.setState({\n      songTitle: e.target.value\n    });\n  }\n\n  onChangeArtist(e) {\n    this.setState({\n      artist: e.target.value\n    });\n  }\n\n  onAddToFavoritesClicked() {\n    console.log(\"in lyrics onAddToFavoritesClicked \"); //this.props.onAddToFavoritesClicked(this.state.songTitle, this.state.artist);\n\n    const favoriteSong = {\n      songTitle: this.state.songTitle,\n      artist: this.state.artist\n    };\n    console.log(\"this.props.user.favorites: \", this.props.user.favorites);\n    var newFavorites = this.props.user.favorites;\n    newFavorites.push(favoriteSong);\n    console.log(\"Lyrics newFavorites arr \", newFavorites);\n    var updatdUser = {\n      username: this.props.user.username,\n      password: this.props.user.password,\n      favorites: newFavorites,\n      id: this.props.user._id\n    }; //add to favorites in db\n\n    axios.post('http://localhost:4000/update', updatdUser).then(res => {\n      console.log(\"lyrics update req: \", res.data);\n    });\n  }\n\n  onSubmit(e) {\n    console.log(\"onSubmit\");\n    e.preventDefault(); //this.props.onSearchClicked(this.state.songTitle, this.state.artist);\n\n    const options = {\n      apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\n      title: this.state.songTitle,\n      artist: this.state.artist,\n      optimizeQuery: true\n    };\n    console.log(\"options: \\n\", options);\n    getLyrics(options).then(lyrics => {\n      console.log(\"lyrics: \", lyrics);\n      this.setState({\n        lyrics: lyrics\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search For Lyrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Song Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.songTitle,\n            onChange: this.onChangeSongTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Artist: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.artist,\n            onChange: this.onChangeArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"search\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), this.state.lyrics && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(StarIcon, {\n            onClick: () => this.onAddToFavoritesClicked()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.lyrics && /*#__PURE__*/_jsxDEV(FontSizeChanger, {\n          targets: ['#target .content'],\n          onChange: (element, newValue, oldValue) => {\n            console.log(element, newValue, oldValue);\n          },\n          options: {\n            stepSize: 2,\n            range: 3\n          },\n          customButtons: {\n            up: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                'fontSize': '36px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this),\n            down: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                'fontSize': '20px'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 39\n            }, this),\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              WebkitBoxSizing: 'border-box',\n              WebkitBorderRadius: '5px',\n              width: '60px'\n            },\n            buttonsMargin: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"target\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"content\",\n            children: [this.state.lyrics, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/src/Lyrics.js"],"names":["getLyrics","getSong","Link","animateScroll","scroll","React","Component","useEffect","StarIcon","FontSizeChanger","Dotdotdot","axios","Lyrics","constructor","props","onChangeSongTitle","bind","onChangeArtist","onAddToFavoritesClicked","onSubmit","state","songTitle","song","artist","lyrics","componentDidUpdate","prevProps","setState","e","target","value","console","log","favoriteSong","user","favorites","newFavorites","push","updatdUser","username","password","id","_id","post","then","res","data","preventDefault","options","apiKey","title","optimizeQuery","render","element","newValue","oldValue","stepSize","range","up","down","style","backgroundColor","color","WebkitBoxSizing","WebkitBorderRadius","width","buttonsMargin"],"mappings":"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","sourcesContent":["import { getLyrics, getSong } from 'genius-lyrics-api';\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport React, { Component, useEffect } from 'react'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FontSizeChanger from 'react-font-size-changer';\r\nimport Dotdotdot from 'react-dotdotdot'\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Lyrics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeSongTitle = this.onChangeSongTitle.bind(this);\r\n        this.onChangeArtist = this.onChangeArtist.bind(this);\r\n        this.onAddToFavoritesClicked = this.onAddToFavoritesClicked.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            songTitle: this.props.song.songTitle,\r\n            artist: this.props.song.artist,\r\n            lyrics: props.lyrics\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.lyrics !== prevProps.lyrics) {\r\n          this.setState({lyrics:this.props.lyrics })\r\n        }\r\n      }\r\n\r\n    onChangeSongTitle(e) {\r\n        this.setState({\r\n            songTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeArtist(e) {\r\n        this.setState({\r\n            artist: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddToFavoritesClicked() {\r\n\r\n        console.log(\"in lyrics onAddToFavoritesClicked \");\r\n        //this.props.onAddToFavoritesClicked(this.state.songTitle, this.state.artist);\r\n        const favoriteSong = {\r\n            songTitle: this.state.songTitle,\r\n            artist: this.state.artist,\r\n        }\r\n        console.log(\"this.props.user.favorites: \", this.props.user.favorites);\r\n        var newFavorites = this.props.user.favorites;\r\n        newFavorites.push(favoriteSong);\r\n\r\n        console.log(\"Lyrics newFavorites arr \", newFavorites);\r\n\r\n        var updatdUser = {\r\n            username: this.props.user.username,\r\n            password: this.props.user.password,\r\n            favorites: newFavorites,\r\n            id: this.props.user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('http://localhost:4000/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        console.log(\"onSubmit\");\r\n\r\n        e.preventDefault();\r\n\r\n        //this.props.onSearchClicked(this.state.songTitle, this.state.artist);\r\n\r\n        const options = {\r\n            apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\r\n            title: this.state.songTitle,\r\n            artist: this.state.artist,\r\n            optimizeQuery: true\r\n        };\r\n\r\n        console.log(\"options: \\n\", options);\r\n\r\n        getLyrics(options).then((lyrics) => {\r\n            console.log(\"lyrics: \", lyrics);\r\n            this.setState({ lyrics: lyrics })\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Search For Lyrics</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Song Title: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.songTitle}\r\n                            onChange={this.onChangeSongTitle}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Artist: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.artist}\r\n                            onChange={this.onChangeArtist}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"search\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                    {this.state.lyrics &&\r\n                        <div className=\"form-group\">\r\n                            <StarIcon onClick={() => this.onAddToFavoritesClicked()}></StarIcon>\r\n                        </div>\r\n                    }\r\n                </form>\r\n\r\n                <div>\r\n                    {this.state.lyrics &&\r\n                        <FontSizeChanger\r\n                            targets={['#target .content']}\r\n                            onChange={(element, newValue, oldValue) => {\r\n                                console.log(element, newValue, oldValue);\r\n                            }}\r\n                            options={{\r\n                                stepSize: 2,\r\n                                range: 3\r\n                            }}\r\n                            customButtons={{\r\n                                up: <span style={{ 'fontSize': '36px' }}>+</span>,\r\n                                down: <span style={{ 'fontSize': '20px' }}>-</span>,\r\n                                style: {\r\n                                    backgroundColor: 'red',\r\n                                    color: 'white',\r\n                                    WebkitBoxSizing: 'border-box',\r\n                                    WebkitBorderRadius: '5px',\r\n                                    width: '60px'\r\n                                },\r\n                                buttonsMargin: 10\r\n                            }}\r\n                        />\r\n                    }\r\n                    <div id=\"target\">\r\n                        <p className=\"content\">{this.state.lyrics} </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}