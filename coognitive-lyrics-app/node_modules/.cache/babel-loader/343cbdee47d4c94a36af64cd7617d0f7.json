{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D5\\u05D9 \\u05D1\\u05E0\\u05D2'\\u05D5\\\\Documents\\\\\\u05E8\\u05D0\\u05D9\\u05D5\\u05E0\\u05D5\\u05EA \\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\coognitive\\\\coognitive-lyrics-app\\\\src\\\\Home.js\";\nimport React, { Component, useState } from 'react';\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\nimport Lyrics from './Lyrics';\nimport FavoritesList from './FavoritesList';\nimport axios from 'axios';\nimport { getLyrics, getSong } from 'genius-lyrics-api';\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"home props.user: \", props.user);\n    this.handleChange = this.handleChange.bind(this);\n    this.onFavoriteClicked = this.onFavoriteClicked.bind(this);\n    this.onDeleteFavorite = this.onDeleteFavorite.bind(this);\n    this.onAddToFavoritesClicked = this.onAddToFavoritesClicked.bind(this);\n    this.state = {\n      selectedTab: props.selectedTab ? props.selectedTab : 0,\n      lyrics: '',\n      songToDisplay: '',\n      user: props.user\n    };\n  }\n\n  onAddToFavoritesClicked() {\n    console.log(\"in home onAddToFavoritesClicked \");\n    const favoriteSong = {\n      songTitle: this.state.songToDisplay.songTitle,\n      artist: this.state.songToDisplay.artist\n    };\n    console.log(\"favoriteSong: \", favoriteSong);\n    var newFavorites = this.props.user.favorites;\n    newFavorites.push(favoriteSong);\n    var updatdUser = {\n      username: this.props.user.username,\n      password: this.props.user.password,\n      favorites: newFavorites,\n      id: this.props.user._id\n    }; //add to favorites in db\n\n    axios.post('http://localhost:4000/update', updatdUser).then(res => {\n      console.log(\"lyrics update req: \", res.data);\n    });\n  }\n\n  handleChange(event, newValue) {\n    console.log(\"events,newvalue: \", event, newValue);\n    this.setState({\n      selectedTab: newValue\n    });\n  }\n\n  onDeleteFavorite(index) {\n    console.log(\"onDeleteFavorite this.props.user.favorites: \", this.props.user.favorites);\n    var newFavorites = this.props.user.favorites;\n    newFavorites.splice(index, 1);\n    console.log(\"Lyrics newFavorites arr \", newFavorites);\n    var updatdUser = {\n      username: this.props.user.username,\n      password: this.props.user.password,\n      favorites: newFavorites,\n      id: this.props.user._id\n    }; //add to favorites in db\n\n    axios.post('http://localhost:4000/update', updatdUser).then(res => {\n      console.log(\"lyrics update req: \", res.data);\n    });\n    this.setState({\n      user: updatdUser\n    });\n  }\n\n  onFavoriteClicked(index) {\n    console.log(\"home onFavoriteClicked index: \", index);\n    console.log(\"song: \", this.props.user.favorites[index]);\n    const song = this.props.user.favorites[index];\n    this.setState({\n      songToDisplay: song\n    });\n    const options = {\n      apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\n      title: song.songTitle,\n      artist: song.artist,\n      optimizeQuery: true\n    };\n    this.setState({\n      selectedTab: 0\n    });\n    console.log(\"selectedtab: \", this.state.selectedTab);\n    console.log(\"options: \\n\", options);\n    getLyrics(options).then(lyrics => {\n      //console.log(\"lyrics: \", lyrics);\n      this.setState({\n        lyrics: lyrics\n      });\n      console.log(\"this.state.lyrics: \", this.state.lyrics);\n    });\n  } // onSearchClicked(songTitle, artist) {\n  //     const options = {\n  //         apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\n  //         title: songTitle,\n  //         artist: artist,\n  //         optimizeQuery: true\n  //     };\n  //     console.log(\"options: \\n\", options);\n  //     getLyrics(options).then((lyrics) => {\n  //         console.log(\"lyrics: \", lyrics);\n  //         this.setState({ lyrics: lyrics })\n  //     });\n  //     // console.log(\"home lyrics: \",this.props.lyrics);\n  //     // return (\n  //     //     <Lyrics lyrics={this.state.lyrics}/>\n  //     // )\n  // }\n  // onAddToFavoritesClicked(songTitle, artist) {\n  //     console.log(\"in home onAddToFavoritesClicked \");\n  //     const favoriteSong = {\n  //         songTitle: songTitle,\n  //         artist: artist,\n  //     }\n  //     console.log(\"this.props.user.favorites: \", this.props.user.favorites);\n  //     var newFavorites = this.props.user.favorites;\n  //     newFavorites.push(favoriteSong);\n  //     console.log(\"Lyrics newFavorites arr \", newFavorites);\n  //     var updatdUser = {\n  //         username: this.props.user.username,\n  //         password: this.props.user.password,\n  //         favorites: newFavorites,\n  //         id: this.props.user._id\n  //     }\n  //     //add to favorites in db\n  //     axios.post('http://localhost:4000/update', updatdUser)\n  //         .then(res => {\n  //             console.log(\"lyrics update req: \", res.data)\n  //         });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: this.state.selectedTab,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Lyrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), this.state.selectedTab === 0 && /*#__PURE__*/_jsxDEV(Lyrics, {\n        lyrics: this.state.lyrics,\n        user: this.props.user,\n        song: this.state.songToDisplay,\n        onAddToFavoritesClicked: this.onAddToFavoritesClicked // onSearchClicked={this.onSearchClicked}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 51\n      }, this), this.state.selectedTab === 1 && /*#__PURE__*/_jsxDEV(FavoritesList, {\n        user: this.props.user,\n        onFavoriteClicked: this.onFavoriteClicked,\n        onDeleteFavorite: this.onDeleteFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default Home;","map":{"version":3,"sources":["C:/Users/נוי בנג'ו/Documents/ראיונות עבודה/coognitive/coognitive-lyrics-app/src/Home.js"],"names":["React","Component","useState","Tabs","Tab","AppBar","Lyrics","FavoritesList","axios","getLyrics","getSong","Home","constructor","props","console","log","user","handleChange","bind","onFavoriteClicked","onDeleteFavorite","onAddToFavoritesClicked","state","selectedTab","lyrics","songToDisplay","favoriteSong","songTitle","artist","newFavorites","favorites","push","updatdUser","username","password","id","_id","post","then","res","data","event","newValue","setState","index","splice","song","options","apiKey","title","optimizeQuery","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { Tabs, Tab, AppBar } from \"@material-ui/core\";\r\nimport Lyrics from './Lyrics'\r\nimport FavoritesList from './FavoritesList'\r\nimport axios from 'axios';\r\nimport { getLyrics, getSong } from 'genius-lyrics-api';\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"home props.user: \", props.user);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onFavoriteClicked = this.onFavoriteClicked.bind(this);\r\n        this.onDeleteFavorite = this.onDeleteFavorite.bind(this);\r\n        this.onAddToFavoritesClicked = this.onAddToFavoritesClicked.bind(this);\r\n\r\n\r\n        this.state = {\r\n            selectedTab: props.selectedTab ? props.selectedTab : 0,\r\n            lyrics: '',\r\n            songToDisplay: '',\r\n            user:props.user\r\n        }\r\n    }\r\n\r\n    onAddToFavoritesClicked() {\r\n         console.log(\"in home onAddToFavoritesClicked \");\r\n        \r\n        const favoriteSong = {\r\n            songTitle: this.state.songToDisplay.songTitle,\r\n            artist: this.state.songToDisplay.artist,\r\n        }\r\n        console.log(\"favoriteSong: \",favoriteSong);\r\n        var newFavorites = this.props.user.favorites;\r\n        newFavorites.push(favoriteSong);\r\n        var updatdUser = {\r\n            username: this.props.user.username,\r\n            password: this.props.user.password,\r\n            favorites: newFavorites,\r\n            id: this.props.user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('http://localhost:4000/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n    }\r\n\r\n    handleChange(event, newValue) {\r\n        console.log(\"events,newvalue: \", event, newValue);\r\n        this.setState({ selectedTab: newValue })\r\n    };\r\n\r\n    onDeleteFavorite(index) {\r\n        console.log(\"onDeleteFavorite this.props.user.favorites: \", this.props.user.favorites);\r\n        var newFavorites =  this.props.user.favorites;\r\n        newFavorites.splice(index, 1);\r\n\r\n        console.log(\"Lyrics newFavorites arr \", newFavorites);\r\n\r\n        var updatdUser = {\r\n            username: this.props.user.username,\r\n            password: this.props.user.password,\r\n            favorites: newFavorites,\r\n            id: this.props.user._id\r\n        }\r\n\r\n        //add to favorites in db\r\n        axios.post('http://localhost:4000/update', updatdUser)\r\n            .then(res => {\r\n                console.log(\"lyrics update req: \", res.data)\r\n            });\r\n\r\n        this.setState({ user: updatdUser });\r\n    }\r\n\r\n    onFavoriteClicked(index) {\r\n        console.log(\"home onFavoriteClicked index: \", index);\r\n        console.log(\"song: \", this.props.user.favorites[index]);\r\n        const song = this.props.user.favorites[index];\r\n        this.setState({songToDisplay:song});\r\n        const options = {\r\n            apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\r\n            title: song.songTitle,\r\n            artist: song.artist,\r\n            optimizeQuery: true\r\n        };\r\n        this.setState({ selectedTab: 0 });\r\n        console.log(\"selectedtab: \", this.state.selectedTab);\r\n\r\n        console.log(\"options: \\n\", options);\r\n\r\n        getLyrics(options).then((lyrics) => {\r\n            //console.log(\"lyrics: \", lyrics);\r\n            this.setState({ lyrics: lyrics })\r\n            console.log(\"this.state.lyrics: \",this.state.lyrics);\r\n        });\r\n\r\n    }\r\n\r\n    // onSearchClicked(songTitle, artist) {\r\n    //     const options = {\r\n    //         apiKey: 'DCCS9ls4wWU8rAylkXUtzBlRrCoA1dIlFF5yINiSp210dT7u-UoZmaOuQYPD-ZPt',\r\n    //         title: songTitle,\r\n    //         artist: artist,\r\n    //         optimizeQuery: true\r\n    //     };\r\n\r\n    //     console.log(\"options: \\n\", options);\r\n\r\n    //     getLyrics(options).then((lyrics) => {\r\n    //         console.log(\"lyrics: \", lyrics);\r\n    //         this.setState({ lyrics: lyrics })\r\n    //     });\r\n\r\n    //     // console.log(\"home lyrics: \",this.props.lyrics);\r\n    //     // return (\r\n    //     //     <Lyrics lyrics={this.state.lyrics}/>\r\n    //     // )\r\n\r\n    // }\r\n\r\n    // onAddToFavoritesClicked(songTitle, artist) {\r\n    //     console.log(\"in home onAddToFavoritesClicked \");\r\n\r\n    //     const favoriteSong = {\r\n    //         songTitle: songTitle,\r\n    //         artist: artist,\r\n    //     }\r\n    //     console.log(\"this.props.user.favorites: \", this.props.user.favorites);\r\n    //     var newFavorites = this.props.user.favorites;\r\n    //     newFavorites.push(favoriteSong);\r\n\r\n    //     console.log(\"Lyrics newFavorites arr \", newFavorites);\r\n\r\n    //     var updatdUser = {\r\n    //         username: this.props.user.username,\r\n    //         password: this.props.user.password,\r\n    //         favorites: newFavorites,\r\n    //         id: this.props.user._id\r\n    //     }\r\n\r\n    //     //add to favorites in db\r\n    //     axios.post('http://localhost:4000/update', updatdUser)\r\n    //         .then(res => {\r\n    //             console.log(\"lyrics update req: \", res.data)\r\n    //         });\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.state.selectedTab} onChange={this.handleChange}>\r\n                        <Tab label=\"Lyrics\" />\r\n                        <Tab label=\"Favorites\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                { this.state.selectedTab === 0 && <Lyrics lyrics={this.state.lyrics}\r\n                    user={this.props.user}\r\n                    song={this.state.songToDisplay}\r\n                    onAddToFavoritesClicked={this.onAddToFavoritesClicked}\r\n                    // onSearchClicked={this.onSearchClicked}\r\n                />}\r\n                { this.state.selectedTab === 1 && <FavoritesList user={this.props.user}\r\n                    onFavoriteClicked={this.onFavoriteClicked}\r\n                    onDeleteFavorite={this.onDeleteFavorite}\r\n                />}\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}